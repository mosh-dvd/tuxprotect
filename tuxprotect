#!/bin/bash
# Tux Protect Daemon - Smart Logic Version

STATUS_FILE="/run/tuxprotect/status"
# משתנה שישמור את המצב התקין האחרון
LAST_KNOWN_STATUS="unknown"

mkdir -p /run/tuxprotect; chmod 755 /run/tuxprotect

block_internet() {
    iptables -F INPUT
    iptables -A INPUT -i lo -j ACCEPT
    iptables -A INPUT -s 192.168.0.0/16,127.0.0.0/8,10.0.0.0/8 -j ACCEPT
    iptables -A INPUT -s 148.251.136.195,23.192.228.84,23.220.75.245,23.215.0.138,23.215.0.136,23.192.228.80,23.220.75.232 -j ACCEPT
    iptables -A INPUT -d raw.githubusercontent.com -j ACCEPT
    iptables -A INPUT -p udp --dport 53 -j ACCEPT
    iptables -A INPUT -p tcp --dport 53 -j ACCEPT
    iptables -A INPUT -j REJECT
}

apply_rules() {
    # בצע את שתי הבדיקות ונשמור את התוצאות
    isNetFree=$(timeout 5 curl -s "https://api.internal.netfree.link/user/0" | jq -r '.isNetFree')
    issuer=$(timeout 5 sh -c 'echo | openssl s_client -connect example.com:443 2>/dev/null | openssl x509 -noout -issuer | awk -F "=" "/O =/ {print \$NF}"')

    # --- הלוגיקה החדשה והחכמה ---

    # מקרה 1: תשובה חיובית וודאית - אנחנו בנטפרי
    if [[ "$isNetFree" == "true" && "$issuer" =~ "NetFree" ]]; then
        LAST_KNOWN_STATUS="open"
        echo "open" > "$STATUS_FILE"
        if iptables -C INPUT -j REJECT; then iptables -F; fi

    # מקרה 2: תשובה שלילית וודאית - אנחנו לא בנטפרי (קיבלנו תשובה, והיא לא נכונה)
    elif [[ "$isNetFree" == "false" || (! -z "$issuer" && ! "$issuer" =~ "NetFree") ]]; then
        LAST_KNOWN_STATUS="blocked"
        if ! curl -s --head http://www.google.com --connect-timeout 5 > /dev/null; then
            echo "no-internet" > "$STATUS_FILE"
        else
            echo "blocked" > "$STATUS_FILE"
        fi
        if ! iptables -C INPUT -j REJECT; then block_internet; fi

    # מקרה 3: אין תשובה / שגיאה - לא קיבלנו תשובה ברורה
    # במקרה זה, אל תשנה כלום. הישאר במצב האחרון שהיה ידוע כתקין.
    else
        # אם המצב האחרון היה "פתוח", השאר פתוח. אם היה "חסום", השאר חסום.
        if [ "$LAST_KNOWN_STATUS" == "open" ]; then
            if iptables -C INPUT -j REJECT; then iptables -F; fi
        else
            if ! iptables -C INPUT -j REJECT; then block_internet; fi
        fi
    fi		
}

block_internet
while true; do 
    apply_rules
    sleep 20
done
